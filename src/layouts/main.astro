---
import type { Props } from '@astrojs/starlight/props';
import ThemeSelect from '@astrojs/starlight/components/ThemeSelect.astro';

import { paths } from "@/settings"
import Link from '@/components/core/link.astro';
import Especial from "@/layouts/especial.astro";
import Menu from "@/icons/menu.astro";
import modifyProps from "@/utils/modifyProps"
import Noticias from './noticias.astro';

const props = modifyProps(Astro.props)
const { hasSidebar, entry, labels } = props
---

<div class="flex min-h-screen">
	<aside class="inline-block border-r py-8 bg-white dark:bg-zinc-900 dark:border-zinc-800">
        <figure class="mb-4">
            <img fetchpriority="high" class="block mx-auto dark:invert" src="/assets/bg-logo.svg" alt="Logo" width="50" height="50">
        </figure>

		<div class="px-4 *:mx-auto">
			<ThemeSelect {...Astro.props} />
		</div>

        <nav class="*:block *:p-5 text-center *:no-underline">
			{paths.map(({ Icon, href, title }) => {
				return (<Link href={href}><Icon slot="icon" /> {title}</Link>)
			})}
        </nav>
    </aside>

	{
		hasSidebar && (
			<nav id="sidebar" class="p-4 px-6 w-80 hidden relative lg:inline-block border-r pt-14 dark:bg-zinc-900 dark:border-zinc-800 *:sticky *:top-16" aria-label={labels['sidebarNav.accessibleLabel']}>
				<slot name="sidebar" />
			</nav>
		)
	}


	{
		entry.data.template === "especial"
		? (<Especial entry={entry} />) 
		: entry.data.template === "news"
		? (<Noticias entry={entry} />)
		: (
			<div class="inline-block flex-1 overflow-y-auto relative">
				<slot />
			</div>
		)
		
	}
		

	{
		hasSidebar && (
			<button id="btnSidebar" class="block lg:hidden fixed bottom-4 right-4 dark:hover:bg-zinc-300 dark:bg-zinc-100 pt-2 px-2 rounded-full bg-zinc-900 hover:bg-zinc-700 hover:cursor-pointer">
				<Menu class="text-zinc-100 dark:text-zinc-900" />	
			</button>
		)
	}
</div>

<style is:inline>
	mobile-starlight-toc > nav {
		top: 0;
		border-top: 0;
		left: 0;
	}
	.mobile-preferences {
		border: none;
	}
</style>


<script>
	const btn = document.querySelector("#btnSidebar") as HTMLButtonElement
		const sidebar = document.querySelector("#sidebar") as HTMLDivElement

		if (btn && sidebar) {
			btn.addEventListener("click", () => sidebar.classList.toggle("hidden"))
		}
</script>